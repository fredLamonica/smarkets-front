{
  // Place your mktplace-frontend workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.
  // Example:
  // "Print to console": {
  // 	"scope": "javascript,typescript",
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }
  "Default constructor with partial object": {
    "scope": "typescript",
    "prefix": "constructorpartial",
    "body": [
      "constructor(init?: Partial<${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/}>) {",
      "\tObject.assign(this, init);",
      "}"
    ],
    "description": "Create a default constructor with partial object"
  },
  "Extends 'Unsubscriber'": {
    "scope": "typescript",
    "prefix": "unsubscriberextends",
    "body": [
      "extends Unsubscriber "
    ],
    "description": "Extends 'Unsubscriber' class"
  },
  "'takeUntil' listen 'Unsubscriber'": {
    "scope": "typescript",
    "prefix": "unsubscribertakeuntil",
    "body": [
      "takeUntil(this.unsubscribe)"
    ],
    "description": "'takeUntil' RxJS operator to listen the subject complete of 'Unsubscriber'"
  },
  "'takeUntil' listen 'Unsubscriber' with 'finalize' unlock UI": {
    "scope": "typescript",
    "prefix": "unsubscribertakeuntilfinalize",
    "body": [
      "\n\ttakeUntil(this.unsubscribe),",
      "\tfinalize(() => this.blockUI.stop())"
    ],
    "description": "'takeUntil' RxJS operator to listen the subject complete of 'Unsubscriber' with 'finalize' RxJS operator to unlock UI"
  }
}
